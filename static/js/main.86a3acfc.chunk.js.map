{"version":3,"sources":["components/MovieCard/MovieCard.tsx","contexts/MoviesContext.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","imgUrl","title","description","imdbUrl","_jsxs","className","children","_jsx","src","alt","href","initialValue","MoviesContext","React","createContext","MoviesContextProvider","_useState","useState","_useState2","_slicedToArray","movies","setMovies","value","useMemo","Provider","useMovies","useContext","MoviesList","_useMovies","map","imdbId","API_URL","concat","FindMovie","_useMovies2","searchQuery","setSearchQuery","_useState3","_useState4","movieFromServer","setMovieFromServer","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","errorMessage","setErrorMessage","_Fragment","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","cn","onChange","target","disabled","length","onClick","some","prev","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86a3acfc.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl, title, description, imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useMemo, useState } from 'react';\n\nimport { Movie } from '../types/Movie';\nimport { InitialState } from '../types/InitialState';\n\nconst initialValue: InitialState = [\n  [],\n  () => {},\n];\n\nconst MoviesContext = React.createContext(initialValue);\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport const MoviesContextProvider: React.FC<Props> = ({ children }) => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const value: InitialState = useMemo(() => [\n    movies,\n    setMovies,\n  ], [movies, setMovies]);\n\n  return (\n    <MoviesContext.Provider value={value}>\n      {children}\n    </MoviesContext.Provider>\n  );\n};\n\nexport const useMovies = () => useContext(MoviesContext);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { useMovies } from '../../contexts/MoviesContext';\n\nexport const MoviesList: React.FC = () => {\n  const [movies] = useMovies();\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_KEY = '99e138a4';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\n\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { useMovies } from '../../contexts/MoviesContext';\n\nconst NOT_APPLICABLE = 'N/A';\nconst IMDB_URL = 'https://www.imdb.com';\n\nexport const FindMovie: React.FC = () => {\n  const [movies, setMovies] = useMovies();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieFromServer, setMovieFromServer] = useState<Movie | null>(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputTyping = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    if (errorMessage) {\n      setErrorMessage('');\n    }\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(searchQuery)\n      .then(response => {\n        if ('Error' in response) {\n          setErrorMessage(response.Error);\n        } else {\n          const {\n            Title, Plot, Poster, imdbID,\n          } = response;\n\n          setMovieFromServer({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === NOT_APPLICABLE\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : Poster,\n            imdbUrl: `${IMDB_URL}/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        }\n      })\n      .catch(setErrorMessage)\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleListAdd = () => {\n    if (movieFromServer\n        && !movies.some(movie => movie.imdbId === movieFromServer.imdbId)) {\n      setMovies(prev => [...prev, movieFromServer]);\n    }\n\n    setSearchQuery('');\n    setMovieFromServer(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': errorMessage,\n              })}\n              value={searchQuery}\n              onChange={handleInputTyping}\n            />\n          </div>\n\n          {\n            errorMessage && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={searchQuery.length === 0}\n            >\n              {movieFromServer ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {\n            movieFromServer && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleListAdd}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n\n      {\n        movieFromServer && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movieFromServer} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\n\nimport { App } from './App';\nimport { MoviesContextProvider } from './contexts/MoviesContext';\n\nReactDOM.render(\n  <MoviesContextProvider>\n    <App />\n  </MoviesContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}